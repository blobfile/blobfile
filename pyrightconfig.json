{
    "venv": "blobfile",
    "include": [
        "blobfile"
    ],
    "exclude": [
        "blobfile/**/*_test.py",
        "conftest.py",
        "setup.py",
        "scripts/**",
        "testing/**",
    ],
    "disableBytesTypePromotions": true,
    "reportAssertAlwaysTrue": "error",
    "reportInvalidStringEscapeSequence": "error",
    "reportInvalidTypeVarUse": "error",
    "reportMissingTypeStubs": "error",
    "reportSelfClsParameterName": "error",
    "reportUnsupportedDunderAll": "error",
    "reportUnusedExpression": "error",
    "reportWildcardImportFromLibrary": "error",
    "reportConstantRedefinition": "error",
    "reportDeprecated": "error",
    "reportDuplicateImport": "error",
    "reportFunctionMemberAccess": "error",
    "reportIncompatibleMethodOverride": "error",
    "reportIncompatibleVariableOverride": "error",
    "reportIncompleteStub": "error",
    "reportInconsistentConstructor": "error",
    "reportInvalidStubStatement": "error",
    "reportMatchNotExhaustive": "error",
    "reportMissingParameterType": "error",
    "reportMissingTypeArgument": "error",
    "reportOverlappingOverload": "error",
    "reportPrivateUsage": "error",
    "reportTypeCommentUsage": "error",
    "reportUnknownLambdaType": "error",
    "reportUnknownParameterType": "error",
    "reportUnnecessaryCast": "error",
    "reportUnnecessaryComparison": "error",
    "reportUnnecessaryContains": "error",
    "reportUnnecessaryIsInstance": "error",
    "reportUnusedClass": "error",
    "reportUnusedImport": "error",
    "reportUnusedFunction": "error",
    "reportUnusedVariable": "error",
    "reportUntypedBaseClass": "error",
    "reportUntypedClassDecorator": "error",
    "reportUntypedFunctionDecorator": "error",
    "reportUntypedNamedTuple": "error",
    "reportCallInDefaultInitializer": "error",
    "reportPropertyTypeMismatch": "error",
    "reportShadowedImports": "error",
    "reportUninitializedInstanceVariable": "error",
    "reportUnnecessaryTypeIgnoreComment": "error",
}
